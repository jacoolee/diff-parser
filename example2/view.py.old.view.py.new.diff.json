[[3, null, null, "--- view.py.old\t2024-12-13 15:51:53", null], [4, null, null, "+++ view.py.new\t2024-12-13 15:52:04", null], [2, 1, 1, 25, 82], [0, 1, 1, "#! /usr/bin/env python", null], [0, 2, 2, "# -*- coding: utf-8 -*-", null], [-1, 3, null, " ", null], [1, null, 3, "", null], [0, 4, 4, "from __future__ import unicode_literals", null], [0, 5, 5, "import sys", null], [0, 6, 6, "reload(sys)", null], [0, 7, 7, "sys.setdefaultencoding('utf8')", null], [-1, 8, null, " ", null], [1, null, 8, "", null], [0, 9, 9, "import json", null], [-1, 10, null, " ", null], [1, null, 10, "", null], [0, 11, 11, "def usage():", null], [0, 12, 12, "    print __file__, \"old_file diff_json_file [--html] [--txt]\"", null], [0, 13, 13, "    sys.exit(-1)", null], [-1, 14, null, " ", null], [1, null, 14, "", null], [1, null, 15, "def _fli(i=None, max_len=5):", null], [1, null, 16, "    if i is None:", null], [1, null, 17, "        return ' '*max_len", null], [1, null, 18, "", null], [1, null, 19, "    fmt = '%'+str(max_len)+'d'", null], [1, null, 20, "    return fmt%(i)", null], [1, null, 21, "", null], [1, null, 22, "# string with fixed length", null], [1, null, 23, "def _fls(txt=None, max_len=63):", null], [1, null, 24, "    _txt = txt or ''", null], [1, null, 25, "    if len(_txt) < max_len:", null], [1, null, 26, "        return _txt + ' '*(max_len-len(_txt))", null], [1, null, 27, "    return _txt[0:max_len]", null], [1, null, 28, "", null], [1, null, 29, "def html_escape(txt):", null], [1, null, 30, "    # https://stackoverflow.com/questions/7381974/which-characters-need-to-be-escaped-in-html#7382028", null], [1, null, 31, "    return txt\\", null], [1, null, 32, "        .replace('&', '&amp')\\", null], [1, null, 33, "        .replace('>', '&gt')\\", null], [1, null, 34, "        .replace('<', '&lt')\\", null], [1, null, 35, "        .replace('\"', '&quot')\\", null], [1, null, 36, "        .replace(\"'\", '&#39')", null], [1, null, 37, "", null], [1, null, 38, "def render(ln_old, s_old, mark, ln_new=None, s_new=None, fli_max_len=5, fls_max_length=63):", null], [1, null, 39, "    if option_render_txt:", null], [1, null, 40, "        print \\", null], [1, null, 41, "            _fli(ln_old, max_len=fli_max_len), _fls(s_old, max_len=fls_max_length), \\", null], [1, null, 42, "            mark, \\", null], [1, null, 43, "            _fli(ln_new, max_len=fli_max_len), _fls(s_new, max_len=fls_max_length)", null], [1, null, 44, "", null], [1, null, 45, "    elif option_render_html:", null], [1, null, 46, "        if mark == ' ':", null], [1, null, 47, "            tr_cls = 'sam'", null], [1, null, 48, "        elif mark == '+':", null], [1, null, 49, "            tr_cls = 'add'", null], [1, null, 50, "        elif mark == '-':", null], [1, null, 51, "            tr_cls = 'del'", null], [1, null, 52, "        elif mark == '|':", null], [1, null, 53, "            tr_cls = 'mod'", null], [1, null, 54, "        else:", null], [1, null, 55, "            tr_cls = ''", null], [1, null, 56, "", null], [1, null, 57, "        print \"<tr class='%s'><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>\"%(", null], [1, null, 58, "            tr_cls,", null], [1, null, 59, "            _fli(ln_old, max_len=fli_max_len),", null], [1, null, 60, "            html_escape(_fls(s_old, max_len=fls_max_length)),", null], [1, null, 61, "            mark,", null], [1, null, 62, "            _fli(ln_new, max_len=fli_max_len),", null], [1, null, 63, "            html_escape(_fls(s_new, max_len=fls_max_length))", null], [1, null, 64, "        )", null], [1, null, 65, "", null], [1, null, 66, "    else:", null], [1, null, 67, "        pass", null], [1, null, 68, "", null], [1, null, 69, "################################################################", null], [1, null, 70, "# main", null], [1, null, 71, "", null], [0, 15, 72, "if len(sys.argv) < 2:", null], [0, 16, 73, "    usage()", null], [-1, 17, null, " ", null], [1, null, 74, "", null], [0, 18, 75, "old_file = None", null], [0, 19, 76, "diff_json_file = None", null], [0, 20, 77, "option_render_txt = False", null], [0, 21, 78, "option_render_html = False", null], [-1, 22, null, " ", null], [1, null, 79, "", null], [0, 23, 80, "for i in sys.argv[1:]:", null], [0, 24, 81, "    if i.startswith('-'):", null], [0, 25, 82, "        if i == '--html':", null], [2, 29, 86, 46, 46], [0, 29, 86, "        else:", null], [0, 30, 87, "            pass", null], [0, 31, 88, "        continue", null], [-1, 32, null, " ", null], [1, null, 89, "", null], [0, 33, 90, "    # files", null], [0, 34, 91, "    if old_file is None: # old_file comes first", null], [0, 35, 92, "        old_file = i", null], [0, 36, 93, "    else:", null], [0, 37, 94, "        diff_json_file = i", null], [-1, 38, null, " ", null], [1, null, 95, "", null], [0, 39, 96, "if old_file is None or diff_json_file is None:", null], [0, 40, 97, "    usage()", null], [-1, 41, null, " ", null], [1, null, 98, "", null], [0, 42, 99, "if not option_render_txt and not option_render_html:", null], [0, 43, 100, "    option_render_txt = True", null], [-1, 44, null, " ", null], [1, null, 101, "", null], [0, 45, 102, "# https://en.wikipedia.org/wiki/Diff#Unified_format", null], [0, 46, 103, "# https://www.gnu.org/software/diffutils/manual/html_node/Detailed-Unified.html", null], [0, 47, 104, "diff_meta = None", null], [0, 48, 105, "with open(diff_json_file, \"r\") as f:", null], [0, 49, 106, "    diff_meta = json.load(f)", null], [-1, 50, null, " ", null], [1, null, 107, "", null], [0, 51, 108, "ops = diff_meta", null], [-1, 52, null, " ", null], [1, null, 109, "", null], [0, 53, 110, "f = open(old_file, \"r\")", null], [-1, 54, null, " ", null], [1, null, 111, "", null], [0, 55, 112, "l_map = {}", null], [0, 56, 113, "ln = 0", null], [0, 57, 114, "for l in f.readlines():", null], [0, 58, 115, "    ln += 1                     # ln starts from 1", null], [-1, 59, null, " ", null], [1, null, 116, "", null], [0, 60, 117, "    l = l.replace('\\n', '')", null], [0, 61, 118, "    l_map[ln] = l", null], [0, 62, 119, "ln_old_total = ln", null], [-1, 63, null, " ", null], [1, null, 120, "", null], [0, 64, 121, "ln_old_last = 0", null], [0, 65, 122, "ln_new_last = 0", null], [-1, 66, null, " ", null], [1, null, 123, "", null], [0, 67, 124, "if option_render_html:", null], [0, 68, 125, "    print \"\"\"", null], [0, 69, 126, "<style>", null], [0, 70, 127, "table {-webkit-border-horizontal-spacing: 0; -webkit-border-vertical-spacing: 0; font-family: monospace; }", null], [-1, 71, null, "td {border-bottom: solid 1px gray; padding-left: 5px; }", null], [1, null, 128, "td {white-space: pre; border-bottom: solid 1px gray; padding-left: 5px; }", null], [0, 72, 129, ".type-mark {display: none; }", null], [0, 73, 130, ".mod {background-color: yellow; color: black; }", null], [0, 74, 131, ".del {background-color: red; color: white;}", null], [2, 76, 133, 129, 171], [0, 76, 133, ".add {background-color: green; color: white;}", null], [0, 77, 134, "</style>", null], [0, 78, 135, "\"\"\"", null], [1, null, 136, "", null], [1, null, 137, "if option_render_html:", null], [0, 79, 138, "    print '<table>'", null], [-1, 80, null, " ", null], [-1, 81, null, "def _fli(i=None, max_len=3):", null], [-1, 82, null, "    if i is None:", null], [-1, 83, null, "        return ' '*max_len", null], [-1, 84, null, " ", null], [-1, 85, null, "    fmt = '%'+str(max_len)+'d'", null], [-1, 86, null, "    return fmt%(i)", null], [-1, 87, null, " ", null], [-1, 88, null, "# string with fixed length", null], [-1, 89, null, "def _fls(txt=None, max_len=63):", null], [-1, 90, null, "    _txt = txt or ''", null], [-1, 91, null, "    if len(_txt) < max_len:", null], [-1, 92, null, "        return _txt + ' '*(max_len-len(_txt))", null], [-1, 93, null, "    return _txt[0:max_len]", null], [-1, 94, null, " ", null], [-1, 95, null, "def render(ln_old, s_old, mark, ln_new=None, s_new=None, fli_max_len=3, fls_max_length=63):", null], [-1, 96, null, "    if option_render_txt:", null], [-1, 97, null, "        print \\", null], [-1, 98, null, "            _fli(ln_old, max_len=fli_max_len), _fls(s_old, max_len=fls_max_length), \\", null], [-1, 99, null, "            mark, \\", null], [-1, 100, null, "            _fli(ln_new, max_len=fli_max_len), _fls(s_new, max_len=fls_max_length)", null], [-1, 101, null, " ", null], [-1, 102, null, "    elif option_render_html:", null], [-1, 103, null, "        if mark == ' ':", null], [-1, 104, null, "            tr_cls = 'sam'", null], [-1, 105, null, "        elif mark == '>':", null], [-1, 106, null, "            tr_cls = 'add'", null], [-1, 107, null, "        elif mark == '<':", null], [-1, 108, null, "            tr_cls = 'del'", null], [-1, 109, null, "        elif mark == '|':", null], [-1, 110, null, "            tr_cls = 'mod'", null], [1, null, 139, "", null], [1, null, 140, "    for op in ops:", null], [1, null, 141, "        typ, ln_old, ln_new, l = op", null], [1, null, 142, "        if typ == 2:", null], [1, null, 143, "            print '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>'%('meta: ln_old:', str(ln_old), 'ln_new:', str(ln_new))", null], [1, null, 144, "        elif typ == -1:", null], [1, null, 145, "            print '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>'%(ln_old, '', '-', html_escape(l))", null], [1, null, 146, "        elif typ == 0:", null], [1, null, 147, "            print '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>'%(ln_old, ln_new, ' ', html_escape(l))", null], [1, null, 148, "        elif typ == 1:", null], [1, null, 149, "            print '<tr><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>'%('', ln_new, '+', html_escape(l))", null], [0, 111, 150, "        else:", null], [-1, 112, null, "            print 'ERROR', 'show never happen'", null], [-1, 113, null, "            tr_cls = ''", null], [-1, 114, null, " ", null], [-1, 115, null, "        print \"<tr class='%s'><td>%s</td><td>%s</td><td>%s</td><td>%s</td><td>%s</td></tr>\"%(", null], [-1, 116, null, "            tr_cls,", null], [-1, 117, null, "            _fli(ln_old, max_len=fli_max_len), _fls(s_old, max_len=fls_max_length),", null], [-1, 118, null, "            mark,", null], [-1, 119, null, "            _fli(ln_new, max_len=fli_max_len), _fls(s_new, max_len=fls_max_length)", null], [-1, 120, null, "        )", null], [-1, 121, null, " ", null], [-1, 122, null, "    else:", null], [-1, 123, null, "        pass", null], [-1, 124, null, " ", null], [1, null, 151, "            pass", null], [1, null, 152, "", null], [1, null, 153, "    print '</table>'", null], [1, null, 154, "    print '<br/>'", null], [1, null, 155, "", null], [1, null, 156, "if option_render_html:", null], [1, null, 157, "    print '<table>'", null], [1, null, 158, "", null], [0, 125, 159, "idx = 0", null], [0, 126, 160, "total = len(ops)", null], [-1, 127, null, " ", null], [1, null, 161, "", null], [0, 128, 162, "if total == 0:", null], [0, 129, 163, "    for i in xrange(1, ln_old_total+1):", null], [0, 130, 164, "        l = l_map[i]", null], [0, 131, 165, "        render(i, l, ' ', i, l)", null], [-1, 132, null, " ", null], [1, null, 166, "", null], [0, 133, 167, "    if option_render_html:", null], [0, 134, 168, "        print '</table>'", null], [-1, 135, null, " ", null], [1, null, 169, "", null], [0, 136, 170, "    sys.exit(0)", null], [-1, 137, null, " ", null], [1, null, 171, "", null], [0, 138, 172, "while idx < total:", null], [-1, 139, null, " ", null], [0, 140, 173, "    op = ops[idx]", null], [0, 141, 174, "    typ, ln_old, ln_new, l = op", null], [-1, 142, null, " ", null], [-1, 143, null, "    if typ == 'M':", null], [-1, 144, null, " ", null], [1, null, 175, "", null], [1, null, 176, "    if typ == 2:                # hunk meta line", null], [0, 145, 177, "        # fill up lines missing between hunks", null], [1, null, 178, "        n = 0", null], [0, 146, 179, "        for i in xrange(int(ln_old_last+1), int(ln_old)):", null], [1, null, 180, "            n += 1", null], [0, 147, 181, "            l = l_map[i]", null], [-1, 148, null, "            render(ln_old, l, ' ', ln_new, l)", null], [-1, 149, null, " ", null], [1, null, 182, "            render(ln_old_last+n, l, '', ln_new_last + n, l)", null], [1, null, 183, "", null], [0, 150, 184, "        idx += 1", null], [0, 151, 185, "        continue", null], [-1, 152, null, " ", null], [-1, 153, null, "    # 'L'", null], [-1, 154, null, " ", null], [1, null, 186, "", null], [1, null, 187, "    # else, data lines", null], [0, 155, 188, "    if ln_old is not None:", null], [0, 156, 189, "        ln_old_last = ln_old", null], [0, 157, 190, "    if ln_new is not None:", null], [0, 158, 191, "        ln_new_last = ln_new", null], [-1, 159, null, " ", null], [-1, 160, null, "    is_flsame = ln_old and ln_new", null], [-1, 161, null, "    is_minus = not is_flsame and ln_old and not ln_new", null], [-1, 162, null, "    is_plus = not is_flsame and not ln_old and ln_new", null], [-1, 163, null, " ", null], [-1, 164, null, "    if is_minus:", null], [-1, 165, null, " ", null], [-1, 166, null, "        if idx+1 == total:      # last one", null], [-1, 167, null, "            render(ln_old, op[3], '<')", null], [-1, 168, null, "            break", null], [-1, 169, null, " ", null], [-1, 170, null, "        # KEY: probe next op if current is '-' to see if it's '+'", null], [-1, 171, null, "        next_op = ops[idx+1]", null], [-1, 172, null, "        next_typ, next_ln_old, next_ln_new, next_l = next_op", null], [-1, 173, null, " ", null], [-1, 174, null, "        next_is_flsame = next_ln_old and next_ln_new", null], [-1, 175, null, "        next_is_minus = not next_is_flsame and next_ln_old and not next_ln_new", null], [-1, 176, null, "        next_is_plus = not next_is_flsame and not next_ln_old and next_ln_new", null], [-1, 177, null, " ", null], [-1, 178, null, "        if next_is_plus:", null], [-1, 179, null, "            render(ln_old, op[3], '|', ln_new or ln_new_last+1, next_op[3])", null], [-1, 180, null, "            idx += 2", null], [1, null, 192, "", null], [1, null, 193, "    if typ == -1:               # minus '-'", null], [1, null, 194, "        # consume consequent '-' as much as possible", null], [1, null, 195, "        idx2 = idx + 1", null], [1, null, 196, "        while idx2 < total and ops[idx2][0] == -1:", null], [1, null, 197, "            idx2 += 1", null], [1, null, 198, "", null], [1, null, 199, "        if idx2 == total:       # idx2 exceeds ops, which means, all from idx is '-'", null], [1, null, 200, "            for _op in ops[idx: idx2]:", null], [1, null, 201, "                _typ, _lno, _lnn, _l = _op", null], [1, null, 202, "", null], [1, null, 203, "                if _lno: ln_old_last = _lno", null], [1, null, 204, "                if _lnn: ln_new_last = _lnn", null], [1, null, 205, "", null], [1, null, 206, "                render(_lno, _l, '-')", null], [1, null, 207, "", null], [1, null, 208, "            # print 'dia: idx2 = %d, total = %d'%(idx2, total)", null], [1, null, 209, "            break               # all done, just break main loop", null], [1, null, 210, "", null], [1, null, 211, "        if ops[idx2][0] == 0:   # idx2 points to first ' ' after bunch of '-'", null], [1, null, 212, "            for _op in ops[idx: idx2]:", null], [1, null, 213, "                _typ, _lno, _lnn, _l = _op", null], [1, null, 214, "", null], [1, null, 215, "                if _lno: ln_old_last = _lno", null], [1, null, 216, "                if _lnn: ln_new_last = _lnn", null], [1, null, 217, "", null], [1, null, 218, "                render(_lno, _l, '-')", null], [1, null, 219, "", null], [1, null, 220, "            # go on to next round", null], [1, null, 221, "            idx = idx2", null], [0, 181, 222, "            continue", null], [-1, 182, null, "        else:", null], [-1, 183, null, "            render(ln_old, op[3], '<')", null], [-1, 184, null, "            idx += 1", null], [-1, 185, null, "            continue", null], [-1, 186, null, " ", null], [-1, 187, null, "    if is_plus:", null], [-1, 188, null, "        render(ln_old, '', '>', ln_new, op[3])", null], [1, null, 223, "", null], [1, null, 224, "        if ops[idx2][0] == 1:   # idx2 points to first '+' after bunch of '-'", null], [1, null, 225, "            # consume consequent '+' as much as possible", null], [1, null, 226, "            idx3 = idx2 + 1", null], [1, null, 227, "            while idx3 < total and ops[idx3][0] == 1:", null], [1, null, 228, "                idx3 += 1", null], [1, null, 229, "", null], [1, null, 230, "            # either idx3 is last op, or points to ' ', '-',", null], [1, null, 231, "            # we all terminate this round", null], [1, null, 232, "", null], [1, null, 233, "            n_minus = idx2 - idx", null], [1, null, 234, "            n_plus = idx3 - idx2", null], [1, null, 235, "", null], [1, null, 236, "            if n_minus <= n_plus:", null], [1, null, 237, "                # cosume both n_minus count of '-' ops and n_minus count of '+' ops", null], [1, null, 238, "                for _i in xrange(0, n_minus):", null], [1, null, 239, "                    _, _lno_l, _lnn_l, _l_l = ops[idx+_i]", null], [1, null, 240, "                    _, _lno_r, _lnn_r, _l_r = ops[idx2+_i]", null], [1, null, 241, "", null], [1, null, 242, "                    if _lno_l: ln_old_last = _lno_l", null], [1, null, 243, "                    if _lnn_r: ln_new_last = _lnn_r", null], [1, null, 244, "", null], [1, null, 245, "                    render(_lno_l, _l_l, '|', _lnn_r, _l_r)", null], [1, null, 246, "", null], [1, null, 247, "                for _op in ops[idx2+n_minus:idx3]: # idx3 not cosumned", null], [1, null, 248, "                    _typ, _lno, _lnn, _l = _op", null], [1, null, 249, "", null], [1, null, 250, "                    if _lno: ln_old_last = _lno", null], [1, null, 251, "                    if _lnn: ln_new_last = _lnn", null], [1, null, 252, "", null], [1, null, 253, "                    render(None, '', '+', _lnn, _l)", null], [1, null, 254, "", null], [1, null, 255, "                # go on to next round", null], [1, null, 256, "                idx = idx3", null], [1, null, 257, "                continue", null], [1, null, 258, "", null], [1, null, 259, "            else:               # n_minus > n_plus", null], [1, null, 260, "                for _op in ops[idx:idx+n_minus-n_plus]:", null], [1, null, 261, "                    _typ, _lno, _lnn, _l = _op", null], [1, null, 262, "", null], [1, null, 263, "                    if _lno: ln_old_last = _lno", null], [1, null, 264, "                    if _lnn: ln_new_last = _lnn", null], [1, null, 265, "", null], [1, null, 266, "                    render(_lno, _l, '-')", null], [1, null, 267, "", null], [1, null, 268, "                # cosume both n_plus count of '-' ops and n_minus count of '+' ops", null], [1, null, 269, "                _idx = idx+n_minus-n_plus", null], [1, null, 270, "                for _i in xrange(0, n_plus):", null], [1, null, 271, "                    _, _lno_l, _lnn_l, _l_l = ops[_idx+_i]", null], [1, null, 272, "                    _, _lno_r, _lnn_r, _l_r = ops[idx2+_i]", null], [1, null, 273, "", null], [1, null, 274, "                    if _lno_l: ln_old_last = _lno_l", null], [1, null, 275, "                    if _lnn_r: ln_new_last = _lnn_r", null], [1, null, 276, "", null], [1, null, 277, "                    render(_lno_l, _l_l, '|', _lnn_r, _l_r)", null], [1, null, 278, "", null], [1, null, 279, "", null], [1, null, 280, "                # go on to next round", null], [1, null, 281, "                idx = idx3", null], [1, null, 282, "                continue", null], [1, null, 283, "", null], [1, null, 284, "    if typ == 1:                # plus '+'", null], [1, null, 285, "        render(ln_old, '', '+', ln_new, op[3])", null], [0, 189, 286, "        idx += 1", null], [0, 190, 287, "        continue", null], [-1, 191, null, " ", null], [-1, 192, null, "    if is_flsame:", null], [1, null, 288, "", null], [1, null, 289, "    if typ == 0:                # space/same ' '", null], [0, 193, 290, "        render(ln_old, op[3], ' ', ln_new, op[3])", null], [0, 194, 291, "        idx += 1", null], [0, 195, 292, "        continue", null], [-1, 196, null, " ", null], [1, null, 293, "", null], [0, 197, 294, "# padding last parts (not included in hunk) if exists from old file", null], [0, 198, 295, "if ln_old_last > 0:             # means have been re-assigned by 'L' type meta", null], [1, null, 296, "    n = 0", null], [0, 199, 297, "    for i in xrange(ln_old_last+1, ln_old_total+1):", null], [1, null, 298, "        n += 1", null], [0, 200, 299, "        l = l_map[i]", null], [-1, 201, null, "        render(i, l, ' ', i, l)", null], [-1, 202, null, " ", null], [1, null, 300, "        render(i, l, '')", null], [1, null, 301, "", null], [0, 203, 302, "if option_render_html:", null], [0, 204, 303, "    print '</table>'", null]]
